name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Тестирование и линтинг
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout кода
      uses: actions/checkout@v4

    - name: Установка Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Кэширование зависимостей
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov flake8 black isort mypy

    - name: Проверка форматирования (Black)
      run: black --check app tests

    - name: Проверка импортов (isort)
      run: isort --check-only app tests

    - name: Линтинг (Flake8)
      run: flake8 app tests --max-line-length=100 --ignore=E203,W503

    - name: Проверка типов (MyPy)
      run: mypy app --ignore-missing-imports

    - name: Запуск тестов
      run: pytest --cov=app --cov-report=xml --cov-report=term-missing

    - name: Загрузка покрытия в Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    name: Сборка Docker образа
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
    - name: Checkout кода
      uses: actions/checkout@v4

    - name: Настройка Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Сборка Docker образа
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: wb_collector:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

